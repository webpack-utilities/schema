// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error Errors 1`] = `
Array [
  Object {
    "dataPath": "/string",
    "keyword": "type",
    "message": "should be string",
    "params": Object {
      "type": "string",
    },
    "schemaPath": "#/properties/string/type",
  },
  Object {
    "dataPath": "/array",
    "keyword": "type",
    "message": "should be array",
    "params": Object {
      "type": "array",
    },
    "schemaPath": "#/properties/array/type",
  },
  Object {
    "dataPath": "/object/prop",
    "keyword": "type",
    "message": "should be boolean",
    "params": Object {
      "type": "boolean",
    },
    "schemaPath": "#/properties/object/properties/prop/type",
  },
  Object {
    "dataPath": "/object/object",
    "keyword": "type",
    "message": "should be object",
    "params": Object {
      "type": "object",
    },
    "schemaPath": "#/properties/object/properties/object/type",
  },
  Object {
    "dataPath": "/boolean",
    "keyword": "type",
    "message": "should be boolean",
    "params": Object {
      "type": "boolean",
    },
    "schemaPath": "#/properties/boolean/type",
  },
  Object {
    "dataPath": "/type",
    "keyword": "typeof",
    "message": "should pass \\"typeof\\" keyword validation",
    "params": Object {
      "keyword": "typeof",
    },
    "schemaPath": "#/properties/type/typeof",
  },
  Object {
    "dataPath": "/instance",
    "keyword": "instanceof",
    "message": "should pass \\"instanceof\\" keyword validation",
    "params": Object {
      "keyword": "instanceof",
    },
    "schemaPath": "#/properties/instance/instanceof",
  },
]
`;

exports[`Error Messages Custom 1`] = `
Object {
  "dataPath": "/string",
  "keyword": "errorMessage",
  "message": "should be {String} (https://github.com/org/repo#anchor)",
  "params": Object {
    "errors": Array [
      Object {
        "dataPath": "/string",
        "keyword": "type",
        "message": "should be string",
        "params": Object {
          "type": "string",
        },
        "schemaPath": "#/properties/string/type",
      },
    ],
  },
  "schemaPath": "#/errorMessage",
}
`;

exports[`Error Messages Custom 2`] = `
"{Name} Invalid Options

options.string should be {String} (https://github.com/org/repo#anchor)
"
`;

exports[`Error Messages Default 1`] = `
Object {
  "dataPath": "/string",
  "keyword": "type",
  "message": "should be string",
  "params": Object {
    "type": "string",
  },
  "schemaPath": "#/properties/string/type",
}
`;

exports[`Error Messages Default 2`] = `
"{Name} Invalid Options

options.string should be string
"
`;

exports[`Error Throws 1`] = `
"{Name} Invalid Options

options.string should be string
options.array should be array
options.object.prop should be boolean
options.object.object should be object
options.boolean should be boolean
options.type should pass \\"typeof\\" keyword validation
options.instance should pass \\"instanceof\\" keyword validation
"
`;
